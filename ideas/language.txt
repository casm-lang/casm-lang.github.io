====== Possible CASM language extensions ======

=== Bitwise operators ===
''&'', ''|'', ''^'', ''~'', ''<<'', ''>>'', ... in addition to ''and'', ''or'', ...

----
=== Logical operators ===
''&&'', ''||'' and ''!'' in addition to ''and'', ''or'', ...

----
=== Conditional expressions ===
Add conditional expressions in addition to conditional rules so that it is possible to use them in derived functions and expressions. (Keep in mind that conditional expressions also split the execution trace in symbolic execution!)

For example: ''let c = if a > b then 21 else 42 in ...''

Syntax: ''Expression = 'IF', Expression, 'THEN', Expression, 'ELSE', Expression | ... ;''

----
=== Let expressions ===
Add let expressions in addition to let rules so that it is possible to use them in derived functions and expressions.

----
=== Functions in rule scope ===
Function definition in rule scope instead of the global scope

----
=== Full character support ===
Lexer, Type, Value, Builtins, ... (incl. String <-> Character mapping)

----
=== While Rule ===
''while phi do P'' meaning: execute ''P'' as long as ''phi'' is true and ''U(P) != {}''

Syntactic sugar for ''iterate if not x then skip else P''